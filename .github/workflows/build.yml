name: TrollShell Full Build

on:
  workflow_dispatch:

jobs:
  build-trollshell:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install host build dependencies
        run: |
          sudo apt update
          sudo apt install -y zip unzip curl git python3 python3-pip ldid ar xz-utils build-essential

      - name: Create tools dir
        run: mkdir -p a-shell/tools/bin

      - name: Download and extract dpkg tools
        run: |
          curl -LO http://ftp.de.debian.org/debian/pool/main/d/dpkg/dpkg_1.20.9_amd64.deb
          ar x dpkg_1.20.9_amd64.deb
          tar -xf data.tar.xz
          cp ./usr/bin/dpkg ./a-shell/tools/bin/
          cp ./usr/bin/dpkg-deb ./a-shell/tools/bin/

      - name: Download and extract apt tools
        run: |
          curl -LO http://ftp.de.debian.org/debian/pool/main/a/apt/apt_1.8.2.1_amd64.deb
          ar x apt_1.8.2.1_amd64.deb
          tar -xf data.tar.xz
          cp ./usr/bin/apt-get ./a-shell/tools/bin/

      - name: Download clang binary release
        run: |
          curl -LO https://github.com/llvm/llvm-project/releases/download/llvmorg-16.0.0/clang+llvm-16.0.0-x86_64-linux-gnu-ubuntu-20.04.tar.xz
          tar -xf clang+llvm-16.0.0-x86_64-linux-gnu-ubuntu-20.04.tar.xz
          cp clang+llvm-16.0.0-x86_64-linux-gnu-ubuntu-20.04/bin/clang ./a-shell/tools/bin/
          cp clang+llvm-16.0.0-x86_64-linux-gnu-ubuntu-20.04/bin/clang++ ./a-shell/tools/bin/

      - name: Download GCC binary release
        run: |
          curl -LO https://ftp.gnu.org/gnu/gcc/gcc-12.2.0/gcc-12.2.0-x86_64-linux-gnu.tar.xz
          tar -xf gcc-12.2.0-x86_64-linux-gnu.tar.xz
          cp gcc-12.2.0-x86_64-linux-gnu/bin/gcc ./a-shell/tools/bin/
          cp gcc-12.2.0-x86_64-linux-gnu/bin/g++ ./a-shell/tools/bin/

      - name: Download Python3 binaries (Warning: this is source, needs building)
        run: echo "Warning: Python binary not included â€” you must build or provide a prebuilt binary."

      - name: Setup pip for python3 and install packages
        run: |
          cd a-shell/tools/bin || exit 1
          python3 -m ensurepip || true
          python3 -m pip install --upgrade pip || true
          python3 -m pip install beautifulsoup4 requests tqdm lxml ebooklib readability-lxml fastapi typer || true

      - name: Download ldid
        run: |
          curl -LO https://github.com/ProcursusTeam/ldid/releases/download/2.1.3/ldid
          chmod +x ldid
          mv ldid ./a-shell/tools/bin/

      - name: Download and build make (simple)
        run: |
          curl -LO https://ftp.gnu.org/gnu/make/make-4.3.tar.gz
          tar -xf make-4.3.tar.gz
          cd make-4.3
          ./configure --prefix=$PWD/install
          make
          make install
          cp install/bin/make ../../a-shell/tools/bin/
          cd ..

      - name: Download and build tar (simple)
        run: |
          curl -LO https://ftp.gnu.org/gnu/tar/tar-1.34.tar.gz
          tar -xf tar-1.34.tar.gz
          cd tar-1.34
          ./configure --prefix=$PWD/install
          make
          make install
          cp install/bin/tar ../../a-shell/tools/bin/
          cd ..

      - name: Set permissions for tools
        run: chmod +x a-shell/tools/bin/*

      - name: Create entitlements.plist
        run: |
          cat <<EOF > entitlements.plist
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>get-task-allow</key><true/>
            <key>platform-application</key><true/>
            <key>com.apple.private.security.no-sandbox</key><true/>
            <key>com.apple.private.security.no-container</key><true/>
            <key>com.apple.private.skip-library-validation</key><true/>
            <key>com.apple.private.security.cs-developer</key><true/>
            <key>com.apple.private.persona-mgmt</key><true/>
            <key>com.apple.private.shell</key><true/>
            <key>com.apple.private.tcc.allow-all</key><true/>
            <key>com.apple.private.io.mount</key><true/>
            <key>com.apple.private.mobile_installation</key><true/>
            <key>com.apple.private.security.storage.AppDataContainers</key><true/>
            <key>com.apple.private.installation.apple</key><true/>
            <key>com.apple.private.mobile_container_manager</key><true/>
            <key>com.apple.private.all_XPC</key><true/>
          </dict>
          </plist>
          EOF

      - name: Patch tools with entitlements using ldid
        run: |
          find a-shell/tools/bin -type f -exec a-shell/tools/bin/ldid -S entitlements.plist {} \;

      - name: Prepare IPA payload
        run: |
          mkdir -p Payload/a-Shell.app
          cp -r a-shell/tools Payload/a-Shell.app/
          cp a-shell/a-ShellRunner Payload/a-Shell.app/a-Shell
          chmod +x Payload/a-Shell.app/a-Shell
          ./a-shell/tools/bin/ldid -S entitlements.plist Payload/a-Shell.app/a-Shell
          zip -r troll-shell.ipa Payload

      - name: Create tools tar.gz archive
        run: tar czvf tools.tar.gz -C a-shell/tools .

      - name: Upload IPA and tools archive
        uses: actions/upload-artifact@v3
        with:
          name: troll-shell-full
          path: |
            troll-shell.ipa
            tools.tar.gz

      - name: Optional release creation
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true
        with:
          name: "TrollShell Auto Build"
          tag_name: "trollshell-${{ github.run_number }}"
          files: |
            troll-shell.ipa
            tools.tar.gz
