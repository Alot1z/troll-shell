name: Build TrollShell IPA

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Install host dependencies
      run: |
        sudo apt update
        sudo apt install -y unzip zip curl git python3 python3-pip ldid ar xz-utils

    - name: Download latest a-Shell IPA
      run: |
        LATEST=$(curl -s https://api.github.com/repos/holzschu/a-shell/releases/latest \
          | jq -r '.assets[] | select(.name|test("ipa$")) | .browser_download_url')
        curl -L "$LATEST" -o a-Shell.ipa

    - name: Unzip IPA payload
      run: unzip -q a-Shell.ipa -d payload

    - name: Prepare tools folder
      run: mkdir -p payload/Payload/a-Shell.app/tools/bin

    - name: Download dpkg and apt tools
      run: |
        curl -LO http://ftp.de.debian.org/debian/pool/main/d/dpkg/dpkg_1.20.9_amd64.deb
        ar x dpkg_1.20.9_amd64.deb
        tar -xf data.tar.xz
        cp usr/bin/dpkg usr/bin/dpkg-deb payload/Payload/a-Shell.app/tools/bin/
        curl -LO http://ftp.de.debian.org/debian/pool/main/a/apt/apt_1.8.2.1_amd64.deb
        ar x apt_1.8.2.1_amd64.deb
        tar -xf data.tar.xz
        cp usr/bin/apt-get payload/Payload/a-Shell.app/tools/bin/

    - name: Download compilers & python
      run: |
        # Clang & gcc binaries
        curl -LO https://github.com/llvm/llvm-project/releases/download/llvmorg-16.0.0/clang+llvm-16.0.0-x86_64-linux-gnu-ubuntu-20.04.tar.xz
        tar -xf *.tar.xz
        cp clang+llvm-*/bin/clang clang+llvm-*/bin/clang++ payload/Payload/a-Shell.app/tools/bin/
        curl -LO https://ftp.gnu.org/gnu/gcc/gcc-12.2.0/gcc-12.2.0-x86_64-linux-gnu.tar.xz
        tar -xf *.tar.xz
        cp gcc-12.2.0-*/bin/gcc gcc-12.2.0-*/bin/g++ payload/Payload/a-Shell.app/tools/bin/
        # Python
        curl -LO https://www.python.org/ftp/python/3.10.7/Python-3.10.7.tgz
        tar -xf *.tgz
        cp Python-3.10.7/python payload/Payload/a-Shell.app/tools/bin/python3

    - name: Install pip-packages
      run: |
        cd payload/Payload/a-Shell.app/tools/bin
        ./python3 -m ensurepip
        ./python3 -m pip install \
          beautifulsoup4 requests tqdm lxml ebooklib readability-lxml fastapi typer

    - name: Download ldid
      run: |
        curl -LO https://github.com/ProcursusTeam/ldid/releases/download/2.1.3/ldid
        chmod +x ldid
        mv ldid payload/Payload/a-Shell.app/tools/bin/

    - name: Build make & tar
      run: |
        curl -LO https://ftp.gnu.org/gnu/make/make-4.3.tar.gz
        tar -xf *.tar.gz
        cd make-4.3 && ./configure --prefix=$PWD/install && make && make install
        cp install/bin/make ../../Payload/a-Shell.app/tools/bin/
        cd ..
        curl -LO https://ftp.gnu.org/gnu/tar/tar-1.34.tar.gz
        tar -xf *.tar.gz
        cd tar-1.34 && ./configure --prefix=$PWD/install && make && make install
        cp install/bin/tar ../../Payload/a-Shell.app/tools/bin/

    - name: Set executable perms
      run: chmod +x payload/Payload/a-Shell.app/tools/bin/*

    - name: Create entitlements plist
      run: |
        cat <<EOF > entitlements.plist
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" ...>
        <plist version="1.0"><dict>
          <key>get-task-allow</key><true/>
          <key>com.apple.private.security.no-sandbox</key><true/>
          ... add your other private keys ...
        </dict></plist>
        EOF

    - name: Sign payload binary + tools
      run: |
        find payload/Payload/a-Shell.app/tools/bin -type f -exec payload/Payload/a-Shell.app/tools/bin/ldid -S entitlements.plist {} \;
        ldid -S entitlements.plist payload/Payload/a-Shell.app/a-Shell

    - name: Package TrollShell IPA
      run: |
        cd payload && zip -qr ../troll-shell.ipa Payload

    - name: Create tools archive
      run: tar czvf tools.tar.gz -C payload/Payload/a-Shell.app/tools .

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: trollshell
        path: |
          troll-shell.ipa
          tools.tar.gz

    - name: Create GitHub release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          troll-shell.ipa
          tools.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      continue-on-error: true
